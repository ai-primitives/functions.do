/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    tenants: Tenant;
    projects: Project;
    functions: Function;
    functionCalls: FunctionCall;
    modelGroups: ModelGroup;
    models: Model;
    providers: Provider;
    schemas: Schema;
    data: Datum;
    datasets: Dataset;
    evals: Eval;
    evalRuns: EvalRun;
    evalResults: EvalResult;
    workflows: Workflow;
    workflowCalls: WorkflowCall;
    prompts: Prompt;
    groups: Group;
    completions: Completion;
    images: Image;
    'payload-jobs': PayloadJob;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    tenants: TenantsSelect<false> | TenantsSelect<true>;
    projects: ProjectsSelect<false> | ProjectsSelect<true>;
    functions: FunctionsSelect<false> | FunctionsSelect<true>;
    functionCalls: FunctionCallsSelect<false> | FunctionCallsSelect<true>;
    modelGroups: ModelGroupsSelect<false> | ModelGroupsSelect<true>;
    models: ModelsSelect<false> | ModelsSelect<true>;
    providers: ProvidersSelect<false> | ProvidersSelect<true>;
    schemas: SchemasSelect<false> | SchemasSelect<true>;
    data: DataSelect<false> | DataSelect<true>;
    datasets: DatasetsSelect<false> | DatasetsSelect<true>;
    evals: EvalsSelect<false> | EvalsSelect<true>;
    evalRuns: EvalRunsSelect<false> | EvalRunsSelect<true>;
    evalResults: EvalResultsSelect<false> | EvalResultsSelect<true>;
    workflows: WorkflowsSelect<false> | WorkflowsSelect<true>;
    workflowCalls: WorkflowCallsSelect<false> | WorkflowCallsSelect<true>;
    prompts: PromptsSelect<false> | PromptsSelect<true>;
    groups: GroupsSelect<false> | GroupsSelect<true>;
    completions: CompletionsSelect<false> | CompletionsSelect<true>;
    images: ImagesSelect<false> | ImagesSelect<true>;
    'payload-jobs': PayloadJobsSelect<false> | PayloadJobsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: {
      updateModels: TaskUpdateModels;
      inline: {
        input: unknown;
        output: unknown;
      };
    };
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  name?: string | null;
  email: string;
  password?: string | null;
  firstName?: string | null;
  lastName?: string | null;
  active?: boolean | null;
  role?: ('admin' | 'editor' | 'viewer') | null;
  avatar?: string | null;
  permissions?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  preferences?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  projects?: (string | Project)[] | null;
  function?: (string | Function)[] | null;
  tenants?:
    | {
        tenant: string | Tenant;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
  enableAPIKey?: boolean | null;
  apiKey?: string | null;
  apiKeyIndex?: string | null;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "projects".
 */
export interface Project {
  id: string;
  name?: string | null;
  description?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  active?: boolean | null;
  status?: ('draft' | 'active' | 'archived') | null;
  users?: (string | User)[] | null;
  functions?: (string | Function)[] | null;
  metadata?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  config?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "functions".
 */
export interface Function {
  id: string;
  tenant?: (string | null) | Tenant;
  name?: string | null;
  description?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  active?: boolean | null;
  deployment?: ('dev' | 'test' | 'prod') | null;
  output?: ('object' | 'text') | null;
  modelGroup?: (string | null) | ModelGroup;
  code?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  workflows?: (string | Workflow)[] | null;
  /**
   * functionCalls that reference this functions
   */
  functionCalls?: (string | FunctionCall)[] | null;
  evals?: (string | Eval)[] | null;
  prompts?: (string | Prompt)[] | null;
  /**
   * projects that reference this functions
   */
  projects?: (string | Project)[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tenants".
 */
export interface Tenant {
  id: string;
  name?: string | null;
  domain?: string | null;
  apiKey?: string | null;
  active?: boolean | null;
  deployed?: boolean | null;
  functions?: (string | Function)[] | null;
  users?: (string | User)[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "modelGroups".
 */
export interface ModelGroup {
  id: string;
  name?: string | null;
  family?: string | null;
  version?: string | null;
  active?: boolean | null;
  /**
   * models that reference this modelGroups
   */
  models?: (string | Model)[] | null;
  /**
   * functions that reference this modelGroups
   */
  functions?: (string | Function)[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "models".
 */
export interface Model {
  id: string;
  name?: string | null;
  description?: string | null;
  modelGroup?: (string | null) | ModelGroup;
  provider?: (string | null) | Provider;
  family?: string | null;
  version?: string | null;
  active?: boolean | null;
  architecture?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  pricing?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  capabilities?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * functionCalls that reference this models
   */
  functionCalls?: (string | FunctionCall)[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "providers".
 */
export interface Provider {
  id: string;
  name?: string | null;
  description?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  active?: boolean | null;
  endpoint?: string | null;
  apiUrl?: string | null;
  apiKey?: string | null;
  organizationId?: string | null;
  authType?: ('apikey' | 'oauth' | 'bearer' | 'none') | null;
  config?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  headers?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  tools?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * models that reference this providers
   */
  models?: (string | Model)[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "functionCalls".
 */
export interface FunctionCall {
  id: string;
  function?: (string | null) | Function;
  model?: (string | null) | Model;
  status?: ('pending' | 'running' | 'completed' | 'failed') | null;
  input?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  output?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  cost?: number | null;
  tokens?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  duration?: number | null;
  meta?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  data?: (string | Datum)[] | null;
  workflow?: (string | null) | WorkflowCall;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "data".
 */
export interface Datum {
  id: string;
  dataset?: (string | null) | Dataset;
  content?: string | null;
  format?: ('text' | 'json' | 'blob') | null;
  createdAt: string;
  updatedAt: string;
  extractedFrom?: string | null;
  embeddingType?: string | null;
  embeddingDim?: number | null;
  data?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  functionCalls?: (string | FunctionCall)[] | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "datasets".
 */
export interface Dataset {
  id: string;
  name?: string | null;
  description?: string | null;
  source?: string | null;
  imported?: string | null;
  version?: string | null;
  format?: ('text' | 'json' | 'csv' | 'images' | 'mixed') | null;
  metadata?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * data that reference this datasets
   */
  data?: (string | Datum)[] | null;
  /**
   * evals that reference this datasets
   */
  evals?: (string | Eval)[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "evals".
 */
export interface Eval {
  id: string;
  name?: string | null;
  type?: ('accuracy' | 'performance' | 'robustness' | 'safety' | 'custom') | null;
  method?: string | null;
  metric?: string | null;
  description?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  dataset?: (string | null) | Dataset;
  functions?: (string | Function)[] | null;
  /**
   * evalRuns that reference this evals
   */
  evalRuns?: (string | EvalRun)[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "evalRuns".
 */
export interface EvalRun {
  id: string;
  eval?: (string | null) | Eval;
  model?: (string | null) | Model;
  function?: (string | null) | Function;
  dataset?: (string | null) | Dataset;
  metrics?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  summary?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  status?: ('pending' | 'running' | 'completed' | 'failed') | null;
  /**
   * results that reference this evalRuns
   */
  results?: (string | EvalResult)[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "evalResults".
 */
export interface EvalResult {
  id: string;
  evalRun?: (string | null) | EvalRun;
  score?: number | null;
  pass?: boolean | null;
  metrics?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  result?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  details?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "workflowCalls".
 */
export interface WorkflowCall {
  id: string;
  workflow?: (string | null) | Workflow;
  input?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  output?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  timestamp?: string | null;
  status?: ('pending' | 'running' | 'completed' | 'failed') | null;
  error?: string | null;
  duration?: number | null;
  success?: boolean | null;
  logs?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  metadata?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  functionCalls?: (string | FunctionCall)[] | null;
  steps?:
    | {
        item?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "workflows".
 */
export interface Workflow {
  id: string;
  name?: string | null;
  description?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  deployed?: boolean | null;
  active?: boolean | null;
  steps?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  functions?: (string | Function)[] | null;
  /**
   * workflowCalls that reference this workflows
   */
  workflowCalls?: (string | WorkflowCall)[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "prompts".
 */
export interface Prompt {
  id: string;
  name?: string | null;
  content?: string | null;
  description?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  version?: string | null;
  template?: boolean | null;
  category?: string | null;
  functions?: (string | Function)[] | null;
  variables?:
    | {
        item?: string | null;
        id?: string | null;
      }[]
    | null;
  metadata?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "schemas".
 */
export interface Schema {
  id: string;
  tenant?: (string | null) | Tenant;
  name?: string | null;
  schema?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  schemaYaml?: string | null;
  type?: ('json' | 'typescript' | 'openai') | null;
  version?: string | null;
  /**
   * functions that reference this schemas
   */
  functions?: (string | Function)[] | null;
  models?: (string | Model)[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "groups".
 */
export interface Group {
  id: string;
  name: string;
  /**
   * Users in this group
   */
  users?:
    | {
        user: string | User;
        id?: string | null;
      }[]
    | null;
  /**
   * Models in this group
   */
  models?:
    | {
        model: string | Model;
        id?: string | null;
      }[]
    | null;
  description?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  type?: ('userGroup' | 'modelGroup' | 'mixedGroup') | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "completions".
 */
export interface Completion {
  id: string;
  tenant?: (string | null) | Tenant;
  function?: (string | null) | Function;
  functionName?: string | null;
  model?: (string | null) | Model;
  hash?: string | null;
  requestId?: string | null;
  seed?: number | null;
  output?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  input?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  schema?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  reasoning?: string | null;
  duration?: number | null;
  provider?: string | null;
  refusal?: string | null;
  error?: string | null;
  validation?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  debug?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "images".
 */
export interface Image {
  id: string;
  tenant?: (string | null) | Tenant;
  alt?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs".
 */
export interface PayloadJob {
  id: string;
  /**
   * Input data provided to the job
   */
  input?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  taskStatus?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  completedAt?: string | null;
  totalTried?: number | null;
  /**
   * If hasError is true this job will not be retried
   */
  hasError?: boolean | null;
  /**
   * If hasError is true, this is the error that caused it
   */
  error?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * Task execution log
   */
  log?:
    | {
        executedAt: string;
        completedAt: string;
        taskSlug: 'inline' | 'updateModels';
        taskID: string;
        input?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        output?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        state: 'failed' | 'succeeded';
        error?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        id?: string | null;
      }[]
    | null;
  taskSlug?: ('inline' | 'updateModels') | null;
  queue?: string | null;
  waitUntil?: string | null;
  processing?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'tenants';
        value: string | Tenant;
      } | null)
    | ({
        relationTo: 'projects';
        value: string | Project;
      } | null)
    | ({
        relationTo: 'functions';
        value: string | Function;
      } | null)
    | ({
        relationTo: 'functionCalls';
        value: string | FunctionCall;
      } | null)
    | ({
        relationTo: 'modelGroups';
        value: string | ModelGroup;
      } | null)
    | ({
        relationTo: 'models';
        value: string | Model;
      } | null)
    | ({
        relationTo: 'providers';
        value: string | Provider;
      } | null)
    | ({
        relationTo: 'schemas';
        value: string | Schema;
      } | null)
    | ({
        relationTo: 'data';
        value: string | Datum;
      } | null)
    | ({
        relationTo: 'datasets';
        value: string | Dataset;
      } | null)
    | ({
        relationTo: 'evals';
        value: string | Eval;
      } | null)
    | ({
        relationTo: 'evalRuns';
        value: string | EvalRun;
      } | null)
    | ({
        relationTo: 'evalResults';
        value: string | EvalResult;
      } | null)
    | ({
        relationTo: 'workflows';
        value: string | Workflow;
      } | null)
    | ({
        relationTo: 'workflowCalls';
        value: string | WorkflowCall;
      } | null)
    | ({
        relationTo: 'prompts';
        value: string | Prompt;
      } | null)
    | ({
        relationTo: 'groups';
        value: string | Group;
      } | null)
    | ({
        relationTo: 'completions';
        value: string | Completion;
      } | null)
    | ({
        relationTo: 'images';
        value: string | Image;
      } | null)
    | ({
        relationTo: 'payload-jobs';
        value: string | PayloadJob;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  name?: T;
  email?: T;
  password?: T;
  firstName?: T;
  lastName?: T;
  active?: T;
  role?: T;
  avatar?: T;
  permissions?: T;
  preferences?: T;
  projects?: T;
  function?: T;
  tenants?:
    | T
    | {
        tenant?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  enableAPIKey?: T;
  apiKey?: T;
  apiKeyIndex?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tenants_select".
 */
export interface TenantsSelect<T extends boolean = true> {
  name?: T;
  domain?: T;
  apiKey?: T;
  active?: T;
  deployed?: T;
  functions?: T;
  users?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "projects_select".
 */
export interface ProjectsSelect<T extends boolean = true> {
  name?: T;
  description?: T;
  active?: T;
  status?: T;
  users?: T;
  functions?: T;
  metadata?: T;
  config?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "functions_select".
 */
export interface FunctionsSelect<T extends boolean = true> {
  tenant?: T;
  name?: T;
  description?: T;
  active?: T;
  deployment?: T;
  output?: T;
  modelGroup?: T;
  code?: T;
  workflows?: T;
  functionCalls?: T;
  evals?: T;
  prompts?: T;
  projects?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "functionCalls_select".
 */
export interface FunctionCallsSelect<T extends boolean = true> {
  function?: T;
  model?: T;
  status?: T;
  input?: T;
  output?: T;
  cost?: T;
  tokens?: T;
  duration?: T;
  meta?: T;
  data?: T;
  workflow?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "modelGroups_select".
 */
export interface ModelGroupsSelect<T extends boolean = true> {
  name?: T;
  family?: T;
  version?: T;
  active?: T;
  models?: T;
  functions?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "models_select".
 */
export interface ModelsSelect<T extends boolean = true> {
  name?: T;
  description?: T;
  modelGroup?: T;
  provider?: T;
  family?: T;
  version?: T;
  active?: T;
  architecture?: T;
  pricing?: T;
  capabilities?: T;
  functionCalls?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "providers_select".
 */
export interface ProvidersSelect<T extends boolean = true> {
  name?: T;
  description?: T;
  active?: T;
  endpoint?: T;
  apiUrl?: T;
  apiKey?: T;
  organizationId?: T;
  authType?: T;
  config?: T;
  headers?: T;
  tools?: T;
  models?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "schemas_select".
 */
export interface SchemasSelect<T extends boolean = true> {
  tenant?: T;
  name?: T;
  schema?: T;
  schemaYaml?: T;
  type?: T;
  version?: T;
  functions?: T;
  models?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "data_select".
 */
export interface DataSelect<T extends boolean = true> {
  dataset?: T;
  content?: T;
  format?: T;
  createdAt?: T;
  updatedAt?: T;
  extractedFrom?: T;
  embeddingType?: T;
  embeddingDim?: T;
  data?: T;
  functionCalls?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "datasets_select".
 */
export interface DatasetsSelect<T extends boolean = true> {
  name?: T;
  description?: T;
  source?: T;
  imported?: T;
  version?: T;
  format?: T;
  metadata?: T;
  data?: T;
  evals?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "evals_select".
 */
export interface EvalsSelect<T extends boolean = true> {
  name?: T;
  type?: T;
  method?: T;
  metric?: T;
  description?: T;
  dataset?: T;
  functions?: T;
  evalRuns?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "evalRuns_select".
 */
export interface EvalRunsSelect<T extends boolean = true> {
  eval?: T;
  model?: T;
  function?: T;
  dataset?: T;
  metrics?: T;
  summary?: T;
  status?: T;
  results?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "evalResults_select".
 */
export interface EvalResultsSelect<T extends boolean = true> {
  evalRun?: T;
  score?: T;
  pass?: T;
  metrics?: T;
  result?: T;
  details?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "workflows_select".
 */
export interface WorkflowsSelect<T extends boolean = true> {
  name?: T;
  description?: T;
  deployed?: T;
  active?: T;
  steps?: T;
  functions?: T;
  workflowCalls?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "workflowCalls_select".
 */
export interface WorkflowCallsSelect<T extends boolean = true> {
  workflow?: T;
  input?: T;
  output?: T;
  timestamp?: T;
  status?: T;
  error?: T;
  duration?: T;
  success?: T;
  logs?: T;
  metadata?: T;
  functionCalls?: T;
  steps?:
    | T
    | {
        item?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "prompts_select".
 */
export interface PromptsSelect<T extends boolean = true> {
  name?: T;
  content?: T;
  description?: T;
  version?: T;
  template?: T;
  category?: T;
  functions?: T;
  variables?:
    | T
    | {
        item?: T;
        id?: T;
      };
  metadata?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "groups_select".
 */
export interface GroupsSelect<T extends boolean = true> {
  name?: T;
  users?:
    | T
    | {
        user?: T;
        id?: T;
      };
  models?:
    | T
    | {
        model?: T;
        id?: T;
      };
  description?: T;
  type?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "completions_select".
 */
export interface CompletionsSelect<T extends boolean = true> {
  tenant?: T;
  function?: T;
  functionName?: T;
  model?: T;
  hash?: T;
  requestId?: T;
  seed?: T;
  output?: T;
  input?: T;
  schema?: T;
  reasoning?: T;
  duration?: T;
  provider?: T;
  refusal?: T;
  error?: T;
  validation?: T;
  debug?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "images_select".
 */
export interface ImagesSelect<T extends boolean = true> {
  tenant?: T;
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs_select".
 */
export interface PayloadJobsSelect<T extends boolean = true> {
  input?: T;
  taskStatus?: T;
  completedAt?: T;
  totalTried?: T;
  hasError?: T;
  error?: T;
  log?:
    | T
    | {
        executedAt?: T;
        completedAt?: T;
        taskSlug?: T;
        taskID?: T;
        input?: T;
        output?: T;
        state?: T;
        error?: T;
        id?: T;
      };
  taskSlug?: T;
  queue?: T;
  waitUntil?: T;
  processing?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TaskUpdateModels".
 */
export interface TaskUpdateModels {
  input?: unknown;
  output: {
    success?: boolean | null;
    message?: string | null;
    count?: number | null;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}